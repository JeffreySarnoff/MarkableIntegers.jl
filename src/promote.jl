romote_rule(::Type{MarkInt128}, ::Type{MarkInt64}) = MarkInt128
promote_rule(::Type{MarkInt128}, ::Type{MarkInt32}) = MarkInt128
promote_rule(::Type{MarkInt128}, ::Type{MarkInt16}) = MarkInt128
promote_rule(::Type{MarkInt128}, ::Type{MarkInt8}) = MarkInt128
promote_rule(::Type{MarkInt64}, ::Type{MarkInt32}) = MarkInt64
promote_rule(::Type{MarkInt64}, ::Type{MarkInt16}) = MarkInt64
promote_rule(::Type{MarkInt64}, ::Type{MarkInt8}) = MarkInt64
promote_rule(::Type{MarkInt32}, ::Type{MarkInt16}) = MarkInt32
promote_rule(::Type{MarkInt32}, ::Type{MarkInt8}) = MarkInt32
promote_rule(::Type{MarkInt16}, ::Type{MarkInt8}) = MarkInt16

promote_rule(::Type{MarkUInt128}, ::Type{MarkUInt64}) = MarkUInt128
promote_rule(::Type{MarkUInt128}, ::Type{MarkUInt32}) = MarkUInt128
promote_rule(::Type{MarkUInt128}, ::Type{MarkUInt16}) = MarkUInt128
promote_rule(::Type{MarkUInt128}, ::Type{MarkUInt8}) = MarkUInt128
promote_rule(::Type{MarkUInt64}, ::Type{MarkUInt32}) = MarkUInt64
promote_rule(::Type{MarkUInt64}, ::Type{MarkUInt16}) = MarkUInt64
promote_rule(::Type{MarkUInt64}, ::Type{MarkUInt8}) = MarkUInt64
promote_rule(::Type{MarkUInt32}, ::Type{MarkUInt16}) = MarkUInt32
promote_rule(::Type{MarkUInt32}, ::Type{MarkUInt8}) = MarkUInt32
promote_rule(::Type{MarkUInt16}, ::Type{MarkUInt8}) = MarkUInt16

promote_rule(::Type{MarkInt128}, ::Type{Int128}) = MarkInt128
promote_rule(::Type{MarkInt128}, ::Type{Int64}) = MarkInt128
promote_rule(::Type{MarkInt128}, ::Type{Int32}) = MarkInt128
promote_rule(::Type{MarkInt128}, ::Type{Int16}) = MarkInt128
promote_rule(::Type{MarkInt128}, ::Type{Int8}) = MarkInt128
promote_rule(::Type{MarkInt64}, ::Type{Int64}) = MarkInt64
promote_rule(::Type{MarkInt64}, ::Type{Int32}) = MarkInt64
promote_rule(::Type{MarkInt64}, ::Type{Int16}) = MarkInt64
promote_rule(::Type{MarkInt64}, ::Type{Int8}) = MarkInt64
promote_rule(::Type{MarkInt32}, ::Type{Int32}) = MarkInt32
promote_rule(::Type{MarkInt32}, ::Type{Int16}) = MarkInt32
promote_rule(::Type{MarkInt32}, ::Type{Int8}) = MarkInt32
promote_rule(::Type{MarkInt16}, ::Type{Int16}) = MarkInt16
promote_rule(::Type{MarkInt16}, ::Type{Int8}) = MarkInt16
promote_rule(::Type{MarkInt8}, ::Type{Int8}) = MarkInt8

promote_rule(::Type{MarkUInt128}, ::Type{UInt128}) = MarkUInt128
promote_rule(::Type{MarkUInt128}, ::Type{UInt64}) = MarkUInt128
promote_rule(::Type{MarkUInt128}, ::Type{UInt32}) = MarkUInt128
promote_rule(::Type{MarkUInt128}, ::Type{UInt16}) = MarkUInt128
promote_rule(::Type{MarkUInt128}, ::Type{UInt8}) = MarkUInt128
promote_rule(::Type{MarkUInt64}, ::Type{UInt64}) = MarkUInt64
promote_rule(::Type{MarkUInt64}, ::Type{UInt32}) = MarkUInt64
promote_rule(::Type{MarkUInt64}, ::Type{UInt16}) = MarkUInt64
promote_rule(::Type{MarkUInt64}, ::Type{UInt8}) = MarkUInt64
promote_rule(::Type{MarkUInt32}, ::Type{UInt32}) = MarkUInt32
promote_rule(::Type{MarkUInt32}, ::Type{UInt16}) = MarkUInt32
promote_rule(::Type{MarkUInt32}, ::Type{UInt8}) = MarkUInt32
promote_rule(::Type{MarkUInt16}, ::Type{UInt16}) = MarkUInt16
promote_rule(::Type{MarkUInt16}, ::Type{UInt8}) = MarkUInt16
promote_rule(::Type{MarkUInt8}, ::Type{UInt8}) = MarkUInt8

MarkInt128(x::MarkInt64) = ismarked(x) ? Marked(Int128(itype(x))) : Unmarked(Int128(itype(x)))
MarkInt128(x::MarkInt32) = ismarked(x) ? Marked(Int128(itype(x))) : Unmarked(Int128(itype(x)))
MarkInt128(x::MarkInt16) = ismarked(x) ? Marked(Int128(itype(x))) : Unmarked(Int128(itype(x)))
MarkInt128(x::MarkInt8) = ismarked(x) ? Marked(Int128(itype(x))) : Unmarked(Int128(itype(x)))
MarkInt64(x::MarkInt32) = ismarked(x) ? Marked(Int64(itype(x))) : Unmarked(Int64(itype(x)))
MarkInt64(x::MarkInt16) = ismarked(x) ? Marked(Int64(itype(x))) : Unmarked(Int64(itype(x)))
MarkInt64(x::MarkInt8) = ismarked(x) ? Marked(Int64(itype(x))) : Unmarked(Int64(itype(x)))
MarkInt32(x::MarkInt16) = ismarked(x) ? Marked(Int32(itype(x))) : Unmarked(Int32(itype(x)))
MarkInt32(x::MarkInt8) = ismarked(x) ? Marked(Int32(itype(x))) : Unmarked(Int32(itype(x)))
MarkInt16(x::MarkInt8) = ismarked(x) ? Marked(Int16(itype(x))) : Unmarked(Int16(itype(x)))

MarkUInt128(x::MarkUInt64) = ismarked(x) ? Marked(UInt128(itype(x))) : Unmarked(UInt128(itype(x)))
MarkUInt128(x::MarkUInt32) = ismarked(x) ? Marked(UInt128(itype(x))) : Unmarked(UInt128(itype(x)))
MarkUInt128(x::MarkUInt16) = ismarked(x) ? Marked(UInt128(itype(x))) : Unmarked(UInt128(itype(x)))
MarkUInt128(x::MarkUInt8) = ismarked(x) ? Marked(UInt128(itype(x))) : Unmarked(UInt128(itype(x)))
MarkUInt64(x::MarkUInt32) = ismarked(x) ? Marked(UInt64(itype(x))) : Unmarked(UInt64(itype(x)))
MarkUInt64(x::MarkUInt16) = ismarked(x) ? Marked(UInt64(itype(x))) : Unmarked(UInt64(itype(x)))
MarkUInt64(x::MarkUInt8) = ismarked(x) ? Marked(UInt64(itype(x))) : Unmarked(UInt64(itype(x)))
MarkUInt32(x::MarkUInt16) = ismarked(x) ? Marked(UInt32(itype(x))) : Unmarked(UInt32(itype(x)))
MarkUInt32(x::MarkUInt8) = ismarked(x) ? Marked(UInt32(itype(x))) : Unmarked(UInt32(itype(x)))
MarkUInt16(x::MarkUInt8) = ismarked(x) ? Marked(UInt16(itype(x))) : Unmarked(UInt16(itype(x)))
